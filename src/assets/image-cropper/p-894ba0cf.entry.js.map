{"version":3,"names":["imageCropperCss","ImageCropperStyle0","ImageCropper","this","handlers","polygonMouseDown","polygonMouseDownPoint","x","y","previousDistance","undefined","svgMouseDownPoint","handlerMouseDownPoint","originalPoints","usingTouchEvent","usingQuad","componentDidLoad","containerElement","addEventListener","e","onContainerTouchMove","watchImgPropHandler","newValue","resetStates","viewBox","naturalWidth","naturalHeight","root","inActiveStroke","parseInt","style","getPropertyValue","activeStroke","watchRectPropHandler","points","getPointsFromRect","img","restrainPointsInBounds","rect","point1","point2","width","point3","height","point4","watchQuadPropHandler","onCanceled","canceled","emit","cropAndEmitImage","croppedImage","getCroppedImage","perspectiveTransform","colorMode","imageCropped","onConfirmed","confirmed","getPointsData","pointsData","renderFooter","hidefooter","h","class","onClick","src","rendenInactiveSelections","inactiveSelections","Fragment","map","selection","index","getPointsDataFromSelection","getRatio","fill","onMouseUp","onSelectionClicked","onTouchStart","selectionClicked","renderHandlers","getHandlerPos","getHandlerSize","selectedHandlerIndex","onMouseDown","onHandlerMouseDown","onHandlerMouseUp","onHandlerTouchStart","onPointerDown","onHandlerPointerDown","key","pos","size","ratio","handlersize","error","console","log","Math","ceil","onSVGTouchStart","coord","getMousePosition","svgElement","touches","length","JSON","parse","stringify","onSVGTouchEnd","onSVGTouchMove","stopPropagation","preventDefault","pinchAndZoom","panSVG","handleMoveEvent","distance","getDistanceBetweenTwoTouches","scale","min","max","touch1","touch2","offsetX","clientX","offsetY","clientY","onContainerMouseUp","onSVGMouseDown","onContainerWheel","deltaY","getPanAndZoomStyle","onSVGMouseMove","newPoints","point","pointIndex","getPointIndexFromHandlerIndex","selectedPoint","imgWidth","imgHeight","onPolygonMouseDown","onPolygonMouseUp","onPolygonTouchStart","onPolygonTouchEnd","pointerType","event","svg","CTM","getScreenCTM","targetTouches","a","f","d","getAllSelections","convertTo","all","getRectFromPoints","push","useQuad","quad","getQuad","getRect","getPoints","minX","minY","maxX","maxY","floor","options","source","isQuad","window","cvr","initCVR","templateName","settings","getSimplifiedSettings","roi","roiMeasuredInPercentage","updateSettings","maxCvsSideLength","normalizedImagesResult","capture","normalizedImageResultItem","items","dataURL","toCanvas","toDataURL","ctx","canvasElement","getContext","getImageFromDataURL","Blob","getImageFromBlob","drawImage","Promise","resolve","reject","reader","FileReader","readAsDataURL","onloadend","result","document","createElement","onload","onerror","detect","results","item","initLicense","license","loadWasm","createInstance","initSettings","getSVGWidth","imgRatio","clientHeight","parentElement","clientWidth","onSVGPointerMove","onSVGPointerDown","onSVGPointerUp","onPolygonPointerDown","onPolygonPointerUp","render","Host","ref","el","onWheel","version","xmlns","transform","onMouseMove","onTouchEnd","onTouchMove","onPointerMove","onPointerUp","href"],"sources":["src/components/image-cropper/image-cropper.css?tag=image-cropper&encapsulation=shadow","src/components/image-cropper/image-cropper.tsx"],"sourcesContent":[":host {\r\n  --active-color: green;\r\n  --inactive-color: gray;\r\n  --active-stroke: 2;\r\n  --inactive-stroke: 4;\r\n  display: block;\r\n  position: relative;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n* {\r\n  user-select:none;\r\n  -webkit-user-select:none;\r\n  -moz-user-select:none;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  justify-content: center;\r\n  background: black;\r\n  overflow: hidden;\r\n}\r\n\r\n.absolute {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.cropper-controls {\r\n  stroke:var(--active-color);\r\n}\r\n\r\n.footer {\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: 0;\r\n  height: 100px;\r\n  width: 100%;\r\n  pointer-events: none;\r\n}\r\n\r\n.items {\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 2.0em;\r\n}\r\n\r\n.items .item {\r\n  flex: 1;\r\n  text-align: center;\r\n}\r\n.items .item:first-child {\r\n  text-align: left;\r\n}\r\n.items .item:last-child {\r\n  text-align: right;\r\n}\r\n\r\n.accept-use img {\r\n  width: 2.5em;\r\n  height: 2.5em;\r\n  pointer-events: all;\r\n  cursor:pointer;\r\n}\r\n\r\n.accept-cancel img {\r\n  width: 2.5em;\r\n  height: 2.5em;\r\n  pointer-events: all;\r\n  cursor:pointer;\r\n}\r\n\r\n.cropper-svg {\r\n  align-self: center;\r\n  touch-action: none;\r\n  cursor:grab;\r\n}\r\n\r\n.cropper-svg polygon {\r\n  cursor:move;\r\n}\r\n\r\n.cropper-svg rect {\r\n  cursor:grab;\r\n}\r\n\r\n.hidden-canvas {\r\n  display: none;\r\n}\r\n\r\n.cropper-svg .inactive-selection {\r\n  stroke:var(--inactive-color);\r\n  cursor:pointer;\r\n}\r\n\r\n.dashed {\r\n  stroke-dasharray:10,10;\r\n}\r\n","import { Component, Event, EventEmitter, Fragment, Host, Method, Prop, State, Watch, h } from '@stencil/core';\r\nimport { DetectedQuadResultItem, NormalizedImageResultItem } from 'dynamsoft-document-normalizer';\r\nimport { CaptureVisionRouter } from 'dynamsoft-capture-vision-router';\r\nimport { CapturedResult } from 'dynamsoft-core';\r\n\r\nexport interface DetectedQuadResult{\r\n  location: Quad;\r\n  confidenceAsDocumentBoundary: number;\r\n}\r\n\r\nexport interface Quad{\r\n  points:[Point,Point,Point,Point];\r\n}\r\n\r\nexport interface Point{\r\n  x:number;\r\n  y:number;\r\n}\r\n\r\nexport interface Rect{\r\n  x:number;\r\n  y:number;\r\n  width:number;\r\n  height:number;\r\n}\r\n\r\nexport interface CropOptions {\r\n  perspectiveTransform?:boolean;\r\n  colorMode?:\"binary\"|\"gray\"|\"color\";\r\n  selection?:Quad|Rect;\r\n  source?:Blob|string|HTMLImageElement|HTMLCanvasElement;\r\n}\r\n\r\n@Component({\r\n  tag: 'image-cropper',\r\n  styleUrl: 'image-cropper.css',\r\n  shadow: true,\r\n})\r\nexport class ImageCropper {\r\n  handlers:number[] = [0,1,2,3,4,5,6,7];\r\n  polygonMouseDown:boolean = false;\r\n  polygonMouseDownPoint:Point = {x:0,y:0};\r\n  previousDistance:number|undefined = undefined;\r\n  svgMouseDownPoint:Point|undefined = undefined;\r\n  handlerMouseDownPoint:Point = {x:0,y:0};\r\n  root:HTMLElement;\r\n  containerElement:HTMLElement;\r\n  svgElement:SVGElement;\r\n  canvasElement:HTMLCanvasElement;\r\n  originalPoints:[Point,Point,Point,Point] = undefined;\r\n  cvr:CaptureVisionRouter|undefined;\r\n  usingTouchEvent:boolean = false;\r\n  usingQuad = false;\r\n  @Prop() img?: HTMLImageElement;\r\n  @Prop() rect?: Rect;\r\n  @Prop() quad?: Quad;\r\n  @Prop() license?: string;\r\n  @Prop() hidefooter?: string;\r\n  @Prop() handlersize?: string;\r\n  @Prop() inactiveSelections?: (Quad|Rect)[];\r\n  @State() viewBox:string = \"0 0 1280 720\";\r\n  @State() activeStroke:number = 2;\r\n  @State() inActiveStroke:number = 4;\r\n  @State() selectedHandlerIndex:number = -1;\r\n  @State() points:[Point,Point,Point,Point] = undefined;\r\n  @State() offsetX = 0;\r\n  @State() offsetY = 0;\r\n  @State() scale = 1.0;\r\n  @Event() confirmed?: EventEmitter<void>;\r\n  @Event() canceled?: EventEmitter<void>;\r\n  @Event() selectionClicked?: EventEmitter<number>;\r\n  @Event() imageCropped: EventEmitter<string>;\r\n\r\n  componentDidLoad(){\r\n    this.containerElement.addEventListener(\"touchmove\", (e:TouchEvent) => {\r\n      this.onContainerTouchMove(e);\r\n    })\r\n    this.containerElement.addEventListener(\"touchend\", () => {\r\n      this.previousDistance = undefined;\r\n    })\r\n  }\r\n\r\n  @Watch('img')\r\n  watchImgPropHandler(newValue: HTMLImageElement) {\r\n    if (newValue) {\r\n      this.resetStates();\r\n      this.viewBox = \"0 0 \"+newValue.naturalWidth+\" \"+newValue.naturalHeight;\r\n      if (this.root) {\r\n        const inActiveStroke = parseInt(this.root.style.getPropertyValue(\"--inactive-stroke\"));\r\n        const activeStroke = parseInt(this.root.style.getPropertyValue(\"--active-stroke\"));\r\n        if (inActiveStroke){\r\n          this.inActiveStroke = inActiveStroke;\r\n        }\r\n        if (activeStroke){\r\n          this.activeStroke = activeStroke;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @Watch('rect')\r\n  watchRectPropHandler(newValue: Rect) {\r\n    if (newValue) {\r\n      this.usingQuad = false;\r\n      let points = this.getPointsFromRect(newValue);\r\n      if (this.img) {\r\n        this.restrainPointsInBounds(points,this.img.naturalWidth,this.img.naturalHeight);\r\n      }\r\n      this.points = points;\r\n    }\r\n  }\r\n\r\n  getPointsFromRect(rect:Rect):[Point,Point,Point,Point]{\r\n    const point1:Point = {x:rect.x,y:rect.y};\r\n    const point2:Point = {x:rect.x+rect.width,y:rect.y};\r\n    const point3:Point = {x:rect.x+rect.width,y:rect.y+rect.height};\r\n    const point4:Point = {x:rect.x,y:rect.y+rect.height};\r\n    return [point1,point2,point3,point4];\r\n  }\r\n\r\n  @Watch('quad')\r\n  watchQuadPropHandler(newValue: Quad) {\r\n    if (newValue) {\r\n      this.usingQuad = true;\r\n      let points = newValue.points;\r\n      if (this.img) {\r\n        this.restrainPointsInBounds(points,this.img.naturalWidth,this.img.naturalHeight);\r\n      }\r\n      this.points = newValue.points;\r\n    }\r\n  }\r\n\r\n  onCanceled(){\r\n    if (this.canceled){\r\n      this.canceled.emit();\r\n    }\r\n  }\r\n\r\n  async cropAndEmitImage() {\r\n    const croppedImage = await this.getCroppedImage({\r\n      perspectiveTransform: true,\r\n      colorMode: \"color\"\r\n    });\r\n    this.imageCropped.emit(croppedImage);\r\n  }\r\n  \r\n  onConfirmed(){\r\n    if (this.confirmed){\r\n      this.confirmed.emit();\r\n      console.log('confimeeed');    }\r\n  console.log('not confimeeed');  \r\n  }\r\n\r\n  getPointsData(){\r\n    if (this.points) {\r\n      let pointsData = this.points[0].x + \",\" + this.points[0].y + \" \";\r\n      pointsData = pointsData + this.points[1].x + \",\" + this.points[1].y +\" \";\r\n      pointsData = pointsData + this.points[2].x + \",\" + this.points[2].y +\" \";\r\n      pointsData = pointsData + this.points[3].x + \",\" + this.points[3].y;\r\n      return pointsData;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  renderFooter(){\r\n    if (this.hidefooter === \"\") {\r\n      return \"\";\r\n    }\r\n    return (\r\n      <div class=\"footer\">\r\n        <section class=\"items\">\r\n          <div class=\"item accept-cancel\" onClick={() => this.onCanceled()}>\r\n            <img src=\"data:image/svg+xml,%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 512 512' enable-background='new 0 0 512 512' xml:space='preserve'%3E%3Ccircle fill='%23727A87' cx='256' cy='256' r='256'/%3E%3Cg id='Icon_5_'%3E%3Cg%3E%3Cpath fill='%23FFFFFF' d='M394.2,142L370,117.8c-1.6-1.6-4.1-1.6-5.7,0L258.8,223.4c-1.6,1.6-4.1,1.6-5.7,0L147.6,117.8 c-1.6-1.6-4.1-1.6-5.7,0L117.8,142c-1.6,1.6-1.6,4.1,0,5.7l105.5,105.5c1.6,1.6,1.6,4.1,0,5.7L117.8,364.4c-1.6,1.6-1.6,4.1,0,5.7 l24.1,24.1c1.6,1.6,4.1,1.6,5.7,0l105.5-105.5c1.6-1.6,4.1-1.6,5.7,0l105.5,105.5c1.6,1.6,4.1,1.6,5.7,0l24.1-24.1 c1.6-1.6,1.6-4.1,0-5.7L288.6,258.8c-1.6-1.6-1.6-4.1,0-5.7l105.5-105.5C395.7,146.1,395.7,143.5,394.2,142z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\" />\r\n          </div>\r\n          <div class=\"item accept-use\" onClick={() => this.onConfirmed()}>\r\n            <img src=\"data:image/svg+xml,%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 512 512' enable-background='new 0 0 512 512' xml:space='preserve'%3E%3Ccircle fill='%232CD865' cx='256' cy='256' r='256'/%3E%3Cg id='Icon_1_'%3E%3Cg%3E%3Cg%3E%3Cpath fill='%23FFFFFF' d='M208,301.4l-55.4-55.5c-1.5-1.5-4-1.6-5.6-0.1l-23.4,22.3c-1.6,1.6-1.7,4.1-0.1,5.7l81.6,81.4 c3.1,3.1,8.2,3.1,11.3,0l171.8-171.7c1.6-1.6,1.6-4.2-0.1-5.7l-23.4-22.3c-1.6-1.5-4.1-1.5-5.6,0.1L213.7,301.4 C212.1,303,209.6,303,208,301.4z'/%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\" />\r\n          </div>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  rendenInactiveSelections(){\r\n    if (!this.inactiveSelections) {\r\n      return \"\";\r\n    }\r\n    return (\r\n      <Fragment>\r\n        {this.inactiveSelections.map((selection,index) => (\r\n          <polygon\r\n            points={this.getPointsDataFromSelection(selection)}\r\n            class=\"inactive-selection dashed\"\r\n            stroke-width={this.inActiveStroke * this.getRatio()}\r\n            fill=\"transparent\"\r\n            onMouseUp={()=>this.onSelectionClicked(index)}\r\n            onTouchStart={()=>this.onSelectionClicked(index)}\r\n          >\r\n         </polygon>\r\n        ))}\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  onSelectionClicked(index:number) {\r\n    if (this.selectionClicked) {\r\n      this.selectionClicked.emit(index);\r\n    }\r\n  }\r\n\r\n  getPointsDataFromSelection(selection:Quad|Rect){\r\n    let points:Point[] = [];\r\n    if (\"width\" in selection) { //is Rect\r\n      points = this.getPointsFromRect(selection);\r\n    }else{\r\n      points = selection.points;\r\n    }\r\n    let pointsData = points[0].x + \",\" + points[0].y + \" \";\r\n    pointsData = pointsData + points[1].x + \",\" + points[1].y +\" \";\r\n    pointsData = pointsData + points[2].x + \",\" + points[2].y +\" \";\r\n    pointsData = pointsData + points[3].x + \",\" + points[3].y;\r\n    return pointsData;\r\n  }\r\n\r\n  renderHandlers(){\r\n    if (!this.points) {\r\n      return (<div></div>)\r\n    }\r\n    return (\r\n      <Fragment>\r\n        {this.handlers.map(index => (\r\n          <rect \r\n            x={this.getHandlerPos(index,\"x\")} \r\n            y={this.getHandlerPos(index,\"y\")} \r\n            width={this.getHandlerSize()}\r\n            height={this.getHandlerSize()} \r\n            class=\"cropper-controls\"\r\n            stroke-width={index === this.selectedHandlerIndex ? this.activeStroke * 2 * this.getRatio() : this.activeStroke * this.getRatio()}\r\n            fill=\"transparent\"\r\n            onMouseDown={(e:MouseEvent)=>this.onHandlerMouseDown(e,index)}\r\n            onMouseUp={(e:MouseEvent)=>this.onHandlerMouseUp(e)}\r\n            onTouchStart={(e:TouchEvent)=>this.onHandlerTouchStart(e,index)}\r\n            onPointerDown={(e:PointerEvent)=>this.onHandlerPointerDown(e,index)}\r\n          />\r\n        ))}\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  getHandlerPos(index:number,key:string) {\r\n    let pos = 0;\r\n    let size = this.getHandlerSize();\r\n    if (index === 0){\r\n      pos = this.points[0][key];\r\n    }else if (index === 1) {\r\n      pos = this.points[0][key] + (this.points[1][key] - this.points[0][key])/2;\r\n    }else if (index === 2) {\r\n      pos = this.points[1][key];\r\n    }else if (index === 3) {\r\n      pos = this.points[1][key] + (this.points[2][key] - this.points[1][key])/2;\r\n    }else if (index === 4) {\r\n      pos = this.points[2][key];\r\n    }else if (index === 5) {\r\n      pos = this.points[3][key] + (this.points[2][key] - this.points[3][key])/2;\r\n    }else if (index === 6) {\r\n      pos = this.points[3][key];\r\n    }else if (index === 7) {\r\n      pos = this.points[0][key] + (this.points[3][key] - this.points[0][key])/2;\r\n    }\r\n    pos = pos - size/2;\r\n    return pos;\r\n  }\r\n\r\n  getHandlerSize() {\r\n    let ratio = this.getRatio();\r\n    let size:number = 20;\r\n    if (this.handlersize) {\r\n      try {\r\n        size = parseInt(this.handlersize);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    return Math.ceil(size*ratio);\r\n  }\r\n\r\n  onSVGTouchStart(e:TouchEvent) {\r\n    this.usingTouchEvent = true;\r\n    this.svgMouseDownPoint = undefined;\r\n    this.previousDistance = undefined;\r\n    let coord = this.getMousePosition(e,this.svgElement);\r\n    if (e.touches.length > 1) {\r\n      this.selectedHandlerIndex = -1;\r\n    }else{\r\n      if (this.selectedHandlerIndex != -1) {\r\n        this.originalPoints = JSON.parse(JSON.stringify(this.points));  //We need this info so that whether we start dragging the rectangular in the center or in the corner will not affect the result.\r\n        this.handlerMouseDownPoint.x = coord.x;\r\n        this.handlerMouseDownPoint.y = coord.y;\r\n      }else{\r\n        this.svgMouseDownPoint = {x:coord.x,y:coord.y};\r\n      }\r\n    }\r\n  }\r\n\r\n  onSVGTouchEnd() {\r\n    this.svgMouseDownPoint = undefined;\r\n  }\r\n\r\n  onSVGTouchMove(e:TouchEvent) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    if (e.touches.length === 2) {\r\n      this.pinchAndZoom(e);\r\n    }else{\r\n      if (this.svgMouseDownPoint) {\r\n        this.panSVG(e);\r\n      }else{\r\n        this.handleMoveEvent(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  //handle pinch and zoom\r\n  pinchAndZoom(e:TouchEvent){\r\n    const distance = this.getDistanceBetweenTwoTouches(e.touches[0],e.touches[1]);\r\n    if (this.previousDistance) {\r\n      if ((distance - this.previousDistance)>0) { //zoom\r\n        this.scale = Math.min(10, this.scale + 0.02);\r\n      }else{\r\n        this.scale = Math.max(0.1,this.scale - 0.02);\r\n      }\r\n      this.previousDistance = distance;\r\n    }else{\r\n      this.previousDistance = distance;\r\n    }\r\n  }\r\n\r\n  getDistanceBetweenTwoTouches(touch1:Touch,touch2:Touch){\r\n    const offsetX = touch1.clientX - touch2.clientX;\r\n    const offsetY = touch1.clientY - touch2.clientY;\r\n    const distance = offsetX * offsetX + offsetY + offsetY;\r\n    return distance;\r\n  }\r\n\r\n  onContainerMouseUp(){\r\n    this.svgMouseDownPoint = undefined;\r\n    if (!this.usingTouchEvent) {\r\n      this.selectedHandlerIndex = -1;\r\n      this.polygonMouseDown = false;\r\n    }\r\n  }\r\n\r\n  onSVGMouseDown(e:MouseEvent) {\r\n    if (!this.usingTouchEvent) {\r\n      let coord = this.getMousePosition(e,this.svgElement);\r\n      this.svgMouseDownPoint = {x:coord.x,y:coord.y};\r\n    }\r\n  }\r\n\r\n  onContainerWheel(e:WheelEvent) {\r\n    if (e.deltaY<0) {\r\n      this.scale = this.scale + 0.1;\r\n    }else{\r\n      this.scale = Math.max(0.1, this.scale - 0.1);\r\n    } \r\n    e.preventDefault();\r\n  }\r\n\r\n  onContainerTouchMove(e:TouchEvent) {\r\n    e.preventDefault();\r\n    if (e.touches.length === 2) {\r\n      this.pinchAndZoom(e);\r\n    }\r\n  }\r\n\r\n  getPanAndZoomStyle(){\r\n    if (this.img) {\r\n      // const percentX = this.offsetX / this.img.naturalWidth * 100; \r\n      // const percentY = this.offsetY / this.img.naturalHeight * 100;\r\n      return \"scale(1.0)\";\r\n      // return \"scale(\"+this.scale+\") translateX(\"+percentX+\"%)translateY(\"+percentY+\"%)\";\r\n    }else{\r\n      return \"scale(1.0)\";\r\n    }\r\n  }\r\n\r\n  onSVGMouseMove(e:MouseEvent){\r\n    if (this.svgMouseDownPoint) {\r\n      this.panSVG(e);\r\n    }else{\r\n      this.handleMoveEvent(e);\r\n    }\r\n  }\r\n\r\n  panSVG(e:TouchEvent|MouseEvent){\r\n    let coord = this.getMousePosition(e,this.svgElement);\r\n    let offsetX = coord.x - this.svgMouseDownPoint.x;\r\n    let offsetY = coord.y - this.svgMouseDownPoint.y;\r\n    //console.log(\"coord\");\r\n    //console.log(coord);\r\n    //console.log(\"svgMouseDownPoint\");\r\n    //console.log(this.svgMouseDownPoint);\r\n\r\n    //console.log(offsetX)\r\n    //console.log(offsetY)\r\n    //e.g img width: 100, offsetX: -10, translateX: -10%\r\n    this.offsetX = this.offsetX + offsetX;\r\n    this.offsetY = this.offsetY + offsetY;\r\n  }\r\n\r\n  handleMoveEvent(e:MouseEvent|TouchEvent){\r\n    if (this.polygonMouseDown) {\r\n      let coord = this.getMousePosition(e,this.svgElement);\r\n      let offsetX = coord.x - this.polygonMouseDownPoint.x;\r\n      let offsetY = coord.y - this.polygonMouseDownPoint.y;\r\n      let newPoints = JSON.parse(JSON.stringify(this.originalPoints));\r\n      for (const point of newPoints) {\r\n        point.x = point.x + offsetX;\r\n        point.y = point.y + offsetY;\r\n        if (point.x < 0 || point.y < 0 || point.x > this.img.naturalWidth || point.y > this.img.naturalHeight){\r\n          console.log(\"reach bounds\");\r\n          return;\r\n        }\r\n      }\r\n      this.points = newPoints;\r\n    }\r\n    if (this.selectedHandlerIndex >= 0) {\r\n      let pointIndex = this.getPointIndexFromHandlerIndex(this.selectedHandlerIndex);\r\n      let coord = this.getMousePosition(e,this.svgElement);\r\n      let offsetX = coord.x - this.handlerMouseDownPoint.x;\r\n      let offsetY = coord.y - this.handlerMouseDownPoint.y;\r\n      let newPoints = JSON.parse(JSON.stringify(this.originalPoints));\r\n      if (pointIndex != -1) {\r\n        let selectedPoint = newPoints[pointIndex];\r\n        selectedPoint.x = this.originalPoints[pointIndex].x + offsetX;\r\n        selectedPoint.y = this.originalPoints[pointIndex].y + offsetY;\r\n        if (this.usingQuad === false) { //rect mode\r\n          if (pointIndex === 0) {\r\n            newPoints[1].y = selectedPoint.y;\r\n            newPoints[3].x = selectedPoint.x;\r\n          }else if (pointIndex === 1) {\r\n            newPoints[0].y = selectedPoint.y;\r\n            newPoints[2].x = selectedPoint.x;\r\n          }else if (pointIndex === 2) {\r\n            newPoints[1].x = selectedPoint.x;\r\n            newPoints[3].y = selectedPoint.y;\r\n          }else if (pointIndex === 3) {\r\n            newPoints[0].x = selectedPoint.x;\r\n            newPoints[2].y = selectedPoint.y;\r\n          }\r\n        }\r\n      }else{ //mid-point handlers\r\n        if (this.selectedHandlerIndex === 1) {\r\n          newPoints[0].y = this.originalPoints[0].y + offsetY;\r\n          newPoints[1].y = this.originalPoints[1].y + offsetY;\r\n        }else if (this.selectedHandlerIndex === 3) {\r\n          newPoints[1].x = this.originalPoints[1].x + offsetX;\r\n          newPoints[2].x = this.originalPoints[2].x + offsetX;\r\n        }else if (this.selectedHandlerIndex === 5) {\r\n          newPoints[2].y = this.originalPoints[2].y + offsetY;\r\n          newPoints[3].y = this.originalPoints[3].y + offsetY;\r\n        }else if (this.selectedHandlerIndex === 7) {\r\n          newPoints[0].x = this.originalPoints[0].x + offsetX;\r\n          newPoints[3].x = this.originalPoints[3].x + offsetX;\r\n        }\r\n      }\r\n      if (this.img) {\r\n        this.restrainPointsInBounds(newPoints,this.img.naturalWidth,this.img.naturalHeight);\r\n      }\r\n      this.points = newPoints;\r\n    }\r\n  }\r\n\r\n  restrainPointsInBounds(points:[Point,Point,Point,Point],imgWidth:number,imgHeight:number){\r\n    for (let index = 0; index < points.length; index++) {\r\n      const point = points[index];\r\n      point.x = Math.max(0,point.x);\r\n      point.x = Math.min(point.x,imgWidth);\r\n      point.y = Math.max(0,point.y);\r\n      point.y = Math.min(point.y,imgHeight);\r\n    }\r\n  }\r\n\r\n  onPolygonMouseDown(e:MouseEvent){\r\n    e.stopPropagation();\r\n    this.originalPoints = JSON.parse(JSON.stringify(this.points));\r\n    this.polygonMouseDown = true;\r\n    let coord = this.getMousePosition(e,this.svgElement);\r\n    this.polygonMouseDownPoint.x = coord.x;\r\n    this.polygonMouseDownPoint.y = coord.y;\r\n  }\r\n\r\n  onPolygonMouseUp(e:MouseEvent){\r\n    e.stopPropagation();\r\n    if (!this.usingTouchEvent) {\r\n      this.selectedHandlerIndex = -1;\r\n      this.polygonMouseDown = false;\r\n    }\r\n  }\r\n\r\n  onPolygonTouchStart(e:TouchEvent) {\r\n    this.usingTouchEvent = true;\r\n    e.stopPropagation();\r\n    this.selectedHandlerIndex = -1;\r\n    this.polygonMouseDown = false;\r\n    this.originalPoints = JSON.parse(JSON.stringify(this.points));\r\n    this.polygonMouseDown = true;\r\n    let coord = this.getMousePosition(e,this.svgElement);\r\n    this.polygonMouseDownPoint.x = coord.x;\r\n    this.polygonMouseDownPoint.y = coord.y;\r\n  }\r\n\r\n  onPolygonTouchEnd(e:TouchEvent) {\r\n    e.stopPropagation();\r\n    this.selectedHandlerIndex = -1;\r\n    this.polygonMouseDown = false;\r\n  }\r\n\r\n  onHandlerMouseDown(e:MouseEvent,index:number){\r\n    e.stopPropagation();\r\n    let coord = this.getMousePosition(e,this.svgElement);\r\n    this.originalPoints = JSON.parse(JSON.stringify(this.points));\r\n    this.handlerMouseDownPoint.x = coord.x;\r\n    this.handlerMouseDownPoint.y = coord.y;\r\n    this.selectedHandlerIndex = index;\r\n  }\r\n\r\n  onHandlerMouseUp(e:MouseEvent){\r\n    e.stopPropagation();\r\n    if (!this.usingTouchEvent) {\r\n      this.selectedHandlerIndex = -1;\r\n    }\r\n  }\r\n\r\n  onHandlerTouchStart(e:TouchEvent,index:number) {\r\n    this.usingTouchEvent = true; //Touch events are triggered before mouse events. We can use this to prevent executing mouse events.\r\n    e.stopPropagation();\r\n    this.polygonMouseDown = false;\r\n    let coord = this.getMousePosition(e,this.svgElement);\r\n    this.originalPoints = JSON.parse(JSON.stringify(this.points));\r\n    this.handlerMouseDownPoint.x = coord.x;\r\n    this.handlerMouseDownPoint.y = coord.y;\r\n    this.selectedHandlerIndex = index;\r\n  }\r\n\r\n  onHandlerPointerDown(e:PointerEvent,index:number) {\r\n    if (e.pointerType != \"mouse\" && !this.usingTouchEvent) {\r\n      this.onHandlerMouseDown(e,index);\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  getPointIndexFromHandlerIndex(index:number){\r\n    if (index === 0) {\r\n      return 0;\r\n    }else if (index === 2) {\r\n      return 1;\r\n    }else if (index === 4) {\r\n      return 2;\r\n    }else if (index === 6) {\r\n      return 3;\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  //Convert the screen coordinates to the SVG's coordinates from https://www.petercollingridge.co.uk/tutorials/svg/interactive/dragging/\r\n  getMousePosition(event:any,svg:any) {\r\n    let CTM = svg.getScreenCTM();\r\n    if (event.targetTouches) { //if it is a touch event\r\n      let x = event.targetTouches[0].clientX;\r\n      let y = event.targetTouches[0].clientY;\r\n      return {\r\n        x: (x - CTM.e) / CTM.a,\r\n        y: (y - CTM.f) / CTM.d\r\n      };\r\n    }else{\r\n      return {\r\n        x: (event.clientX - CTM.e) / CTM.a,\r\n        y: (event.clientY - CTM.f) / CTM.d\r\n      };\r\n    }\r\n  }\r\n\r\n  getRatio(){\r\n    if (this.img) {\r\n      return this.img.naturalWidth/750;\r\n    }else{\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  @Method()\r\n  async resetStates():Promise<void>\r\n  {\r\n    this.scale = 1.0;\r\n    this.offsetX = 0;\r\n    this.offsetY = 0;\r\n  }\r\n\r\n  @Method()\r\n  async getAllSelections(convertTo?:\"rect\"|\"quad\"):Promise<(Quad|Rect)[]>\r\n  {\r\n    let all = [];\r\n    for (let index = 0; index < this.inactiveSelections.length; index++) {\r\n      let selection = this.inactiveSelections[index];\r\n      if (convertTo) {\r\n        if (\"width\" in selection && convertTo === \"quad\") {\r\n          selection = {points:this.getPointsFromRect(selection)};\r\n        }else if (!(\"width\" in selection) && convertTo === \"rect\"){\r\n          selection = this.getRectFromPoints(selection.points);\r\n        }\r\n      }\r\n      all.push(selection);\r\n    }\r\n    let useQuad = true;\r\n    if (convertTo) {\r\n      if (convertTo === \"rect\") {\r\n        useQuad = false;\r\n      }\r\n    }else{\r\n      if (!this.usingQuad) {\r\n        useQuad = false;\r\n      }\r\n    }\r\n    if (useQuad) {\r\n      const quad = await this.getQuad();\r\n      all.push(quad);\r\n    }else{\r\n      const rect = await this.getRect();\r\n      all.push(rect);\r\n    }\r\n    return all;\r\n  }\r\n\r\n  @Method()\r\n  async getPoints():Promise<[Point,Point,Point,Point]>\r\n  {\r\n    return this.points;\r\n  }\r\n\r\n  @Method()\r\n  async getQuad():Promise<Quad>\r\n  {\r\n    return {points:this.points};\r\n  }\r\n\r\n  @Method()\r\n  async getRect():Promise<Rect>\r\n  {\r\n    return this.getRectFromPoints(this.points);\r\n  }\r\n\r\n  getRectFromPoints(points:Point[]):Rect{\r\n    let minX:number;\r\n    let minY:number;\r\n    let maxX:number;\r\n    let maxY:number;\r\n    for (const point of points) {\r\n      if (!minX) {\r\n        minX = point.x;\r\n        maxX = point.x;\r\n        minY = point.y;\r\n        maxY = point.y;\r\n      }else{\r\n        minX = Math.min(point.x,minX);\r\n        minY = Math.min(point.y,minY);\r\n        maxX = Math.max(point.x,maxX);\r\n        maxY = Math.max(point.y,maxY);  \r\n      }\r\n    }\r\n    minX = Math.floor(minX);\r\n    maxX = Math.floor(maxX);\r\n    minY = Math.floor(minY);\r\n    maxY = Math.floor(maxY);\r\n    return {x:minX,y:minY,width:maxX - minX,height:maxY - minY};\r\n  }\r\n\r\n  @Method()\r\n  async getCroppedImage(options:CropOptions):Promise<string>\r\n  {\r\n    let img:Blob|string|HTMLImageElement|HTMLCanvasElement = this.img;\r\n    if (options.source) {\r\n      img = options.source;\r\n    }\r\n    let isQuad = false;\r\n    if (options.selection) {\r\n      if (!(\"width\" in options.selection)) {\r\n        isQuad = true;\r\n      }\r\n    }else{\r\n      if (this.usingQuad) {\r\n        isQuad = true;\r\n      }\r\n    }\r\n    if (options.perspectiveTransform && window[\"Dynamsoft\"] && isQuad) {\r\n      if (!this.cvr) {\r\n        await this.initCVR();\r\n      }\r\n      let templateName = \"NormalizeDocument_Color\";\r\n      if (options.colorMode) {\r\n        if (options.colorMode === \"binary\") {\r\n          templateName = \"NormalizeDocument_Binary\";\r\n        } else if (options.colorMode === \"gray\") {\r\n          templateName = \"NormalizeDocument_Gray\";\r\n        } else {\r\n          templateName = \"NormalizeDocument_Color\";\r\n        }\r\n      }\r\n      let quad:Quad;\r\n      if (options.selection) {\r\n        if (\"width\" in options.selection) {\r\n          quad = {points:this.getPointsFromRect(options.selection)};\r\n        }else{\r\n          quad = options.selection;\r\n        }\r\n      }else{\r\n        quad = await this.getQuad();\r\n      }\r\n      let settings = await this.cvr.getSimplifiedSettings(templateName);\r\n      settings.roi  = quad;\r\n      settings.roiMeasuredInPercentage = false;\r\n      await this.cvr.updateSettings(templateName, settings);\r\n      this.cvr.maxCvsSideLength = 99999;\r\n      let normalizedImagesResult:CapturedResult = await this.cvr.capture(img,templateName,true);\r\n      let normalizedImageResultItem:NormalizedImageResultItem = (normalizedImagesResult.items[0] as NormalizedImageResultItem);\r\n      let dataURL = normalizedImageResultItem.toCanvas().toDataURL();\r\n      return dataURL;\r\n    }else{\r\n      let ctx = this.canvasElement.getContext(\"2d\");\r\n      let rect:Rect;\r\n      if (options.selection) {\r\n        if (\"width\" in options.selection) {\r\n          rect = options.selection;\r\n        }else{\r\n          rect = this.getRectFromPoints(options.selection.points);\r\n        }\r\n      }else{\r\n        rect = await this.getRect();\r\n      }\r\n      if (typeof(img) === \"string\") {\r\n        img = await this.getImageFromDataURL(img);\r\n      }\r\n      if (img instanceof Blob) {\r\n        img = await this.getImageFromBlob(img);\r\n      }\r\n      this.canvasElement.width = rect.width;\r\n      this.canvasElement.height = rect.height;\r\n      ctx.drawImage(img, rect.x, rect.y, rect.width, rect.height, 0, 0, rect.width, rect.height);\r\n      return this.canvasElement.toDataURL();\r\n    }\r\n  }\r\n\r\n  async getImageFromBlob(source:Blob){\r\n    return new Promise<HTMLImageElement>((resolve, reject) => {\r\n      let reader = new FileReader();\r\n      reader.readAsDataURL(source);\r\n      reader.onloadend = function () {\r\n        let dataURL:string = reader.result as string;\r\n        let img = document.createElement(\"img\");\r\n        img.onload = function(){\r\n          resolve(img);\r\n        };\r\n        img.onerror = function(){\r\n          reject();\r\n        }\r\n        img.src = dataURL;\r\n      }\r\n    })\r\n  }\r\n\r\n  async getImageFromDataURL(source:string){\r\n    return new Promise<HTMLImageElement>((resolve, reject) => {\r\n      let img = document.createElement(\"img\");\r\n      img.onload = function(){\r\n        resolve(img);\r\n      };\r\n      img.onerror = function(){\r\n        reject();\r\n      }\r\n      img.src = source;\r\n    })\r\n  }\r\n\r\n  @Method()\r\n  async detect(source: string | HTMLImageElement | Blob | HTMLCanvasElement):Promise<DetectedQuadResult[]>\r\n  {\r\n    if (window[\"Dynamsoft\"]) {\r\n      if (!this.cvr) {\r\n        await this.initCVR();\r\n      }\r\n      this.cvr.maxCvsSideLength = 99999;\r\n      let result:CapturedResult = await this.cvr.capture(source,\"DetectDocumentBoundaries_Default\",true);\r\n      let results:DetectedQuadResultItem[] = [];\r\n      for (let index = 0; index < result.items.length; index++) {\r\n        const item = (result.items[index] as DetectedQuadResultItem);\r\n        results.push(item);\r\n      }\r\n      return results;\r\n    }else{\r\n      throw \"Dynamsoft Document Normalizer not found\";\r\n    }\r\n  }\r\n\r\n  async initCVR(){\r\n    window[\"Dynamsoft\"][\"License\"][\"LicenseManager\"].initLicense(this.license);\r\n    window[\"Dynamsoft\"][\"Core\"][\"CoreModule\"].loadWasm([\"DDN\"]);\r\n    this.cvr = await window[\"Dynamsoft\"][\"CVR\"][\"CaptureVisionRouter\"].createInstance();\r\n    await this.cvr.initSettings(\"{\\\"CaptureVisionTemplates\\\": [{\\\"Name\\\": \\\"Default\\\"},{\\\"Name\\\": \\\"DetectDocumentBoundaries_Default\\\",\\\"ImageROIProcessingNameArray\\\": [\\\"roi-detect-document-boundaries\\\"]},{\\\"Name\\\": \\\"DetectAndNormalizeDocument_Default\\\",\\\"ImageROIProcessingNameArray\\\": [\\\"roi-detect-and-normalize-document\\\"]},{\\\"Name\\\": \\\"NormalizeDocument_Binary\\\",\\\"ImageROIProcessingNameArray\\\": [\\\"roi-normalize-document-binary\\\"]},  {\\\"Name\\\": \\\"NormalizeDocument_Gray\\\",\\\"ImageROIProcessingNameArray\\\": [\\\"roi-normalize-document-gray\\\"]},  {\\\"Name\\\": \\\"NormalizeDocument_Color\\\",\\\"ImageROIProcessingNameArray\\\": [\\\"roi-normalize-document-color\\\"]}],\\\"TargetROIDefOptions\\\": [{\\\"Name\\\": \\\"roi-detect-document-boundaries\\\",\\\"TaskSettingNameArray\\\": [\\\"task-detect-document-boundaries\\\"]},{\\\"Name\\\": \\\"roi-detect-and-normalize-document\\\",\\\"TaskSettingNameArray\\\": [\\\"task-detect-and-normalize-document\\\"]},{\\\"Name\\\": \\\"roi-normalize-document-binary\\\",\\\"TaskSettingNameArray\\\": [\\\"task-normalize-document-binary\\\"]},  {\\\"Name\\\": \\\"roi-normalize-document-gray\\\",\\\"TaskSettingNameArray\\\": [\\\"task-normalize-document-gray\\\"]},  {\\\"Name\\\": \\\"roi-normalize-document-color\\\",\\\"TaskSettingNameArray\\\": [\\\"task-normalize-document-color\\\"]}],\\\"DocumentNormalizerTaskSettingOptions\\\": [{\\\"Name\\\": \\\"task-detect-and-normalize-document\\\",\\\"SectionImageParameterArray\\\": [{\\\"Section\\\": \\\"ST_REGION_PREDETECTION\\\",\\\"ImageParameterName\\\": \\\"ip-detect-and-normalize\\\"},{\\\"Section\\\": \\\"ST_DOCUMENT_DETECTION\\\",\\\"ImageParameterName\\\": \\\"ip-detect-and-normalize\\\"},{\\\"Section\\\": \\\"ST_DOCUMENT_NORMALIZATION\\\",\\\"ImageParameterName\\\": \\\"ip-detect-and-normalize\\\"}]},{\\\"Name\\\": \\\"task-detect-document-boundaries\\\",\\\"TerminateSetting\\\": {\\\"Section\\\": \\\"ST_DOCUMENT_DETECTION\\\"},\\\"SectionImageParameterArray\\\": [{\\\"Section\\\": \\\"ST_REGION_PREDETECTION\\\",\\\"ImageParameterName\\\": \\\"ip-detect\\\"},{\\\"Section\\\": \\\"ST_DOCUMENT_DETECTION\\\",\\\"ImageParameterName\\\": \\\"ip-detect\\\"},{\\\"Section\\\": \\\"ST_DOCUMENT_NORMALIZATION\\\",\\\"ImageParameterName\\\": \\\"ip-detect\\\"}]},{\\\"Name\\\": \\\"task-normalize-document-binary\\\",\\\"StartSection\\\": \\\"ST_DOCUMENT_NORMALIZATION\\\",   \\\"ColourMode\\\": \\\"ICM_BINARY\\\",\\\"SectionImageParameterArray\\\": [{\\\"Section\\\": \\\"ST_REGION_PREDETECTION\\\",\\\"ImageParameterName\\\": \\\"ip-normalize\\\"},{\\\"Section\\\": \\\"ST_DOCUMENT_DETECTION\\\",\\\"ImageParameterName\\\": \\\"ip-normalize\\\"},{\\\"Section\\\": \\\"ST_DOCUMENT_NORMALIZATION\\\",\\\"ImageParameterName\\\": \\\"ip-normalize\\\"}]},  {\\\"Name\\\": \\\"task-normalize-document-gray\\\",   \\\"ColourMode\\\": \\\"ICM_GRAYSCALE\\\",\\\"StartSection\\\": \\\"ST_DOCUMENT_NORMALIZATION\\\",\\\"SectionImageParameterArray\\\": [{\\\"Section\\\": \\\"ST_REGION_PREDETECTION\\\",\\\"ImageParameterName\\\": \\\"ip-normalize\\\"},{\\\"Section\\\": \\\"ST_DOCUMENT_DETECTION\\\",\\\"ImageParameterName\\\": \\\"ip-normalize\\\"},{\\\"Section\\\": \\\"ST_DOCUMENT_NORMALIZATION\\\",\\\"ImageParameterName\\\": \\\"ip-normalize\\\"}]},  {\\\"Name\\\": \\\"task-normalize-document-color\\\",   \\\"ColourMode\\\": \\\"ICM_COLOUR\\\",\\\"StartSection\\\": \\\"ST_DOCUMENT_NORMALIZATION\\\",\\\"SectionImageParameterArray\\\": [{\\\"Section\\\": \\\"ST_REGION_PREDETECTION\\\",\\\"ImageParameterName\\\": \\\"ip-normalize\\\"},{\\\"Section\\\": \\\"ST_DOCUMENT_DETECTION\\\",\\\"ImageParameterName\\\": \\\"ip-normalize\\\"},{\\\"Section\\\": \\\"ST_DOCUMENT_NORMALIZATION\\\",\\\"ImageParameterName\\\": \\\"ip-normalize\\\"}]}],\\\"ImageParameterOptions\\\": [{\\\"Name\\\": \\\"ip-detect-and-normalize\\\",\\\"BinarizationModes\\\": [{\\\"Mode\\\": \\\"BM_LOCAL_BLOCK\\\",\\\"BlockSizeX\\\": 0,\\\"BlockSizeY\\\": 0,\\\"EnableFillBinaryVacancy\\\": 0}],\\\"TextDetectionMode\\\": {\\\"Mode\\\": \\\"TTDM_WORD\\\",\\\"Direction\\\": \\\"HORIZONTAL\\\",\\\"Sensitivity\\\": 7}},{\\\"Name\\\": \\\"ip-detect\\\",\\\"BinarizationModes\\\": [{\\\"Mode\\\": \\\"BM_LOCAL_BLOCK\\\",\\\"BlockSizeX\\\": 0,\\\"BlockSizeY\\\": 0,\\\"EnableFillBinaryVacancy\\\": 0,\\\"ThresholdCompensation\\\" : 7}],\\\"TextDetectionMode\\\": {\\\"Mode\\\": \\\"TTDM_WORD\\\",\\\"Direction\\\": \\\"HORIZONTAL\\\",\\\"Sensitivity\\\": 7},\\\"ScaleDownThreshold\\\" : 512},{\\\"Name\\\": \\\"ip-normalize\\\",\\\"BinarizationModes\\\": [{\\\"Mode\\\": \\\"BM_LOCAL_BLOCK\\\",\\\"BlockSizeX\\\": 0,\\\"BlockSizeY\\\": 0,\\\"EnableFillBinaryVacancy\\\": 0}],\\\"TextDetectionMode\\\": {\\\"Mode\\\": \\\"TTDM_WORD\\\",\\\"Direction\\\": \\\"HORIZONTAL\\\",\\\"Sensitivity\\\": 7}}]}\");\r\n  }\r\n\r\n  getSVGWidth(){\r\n    if (this.img && this.svgElement) {\r\n      this.svgElement.style.height = \"100%\";\r\n      let imgRatio = this.img.naturalWidth/this.img.naturalHeight;\r\n      let width = this.svgElement.clientHeight * imgRatio;\r\n      if (width>this.svgElement.parentElement.clientWidth) {\r\n        width = this.svgElement.parentElement.clientWidth;\r\n        this.svgElement.style.height = width / imgRatio + \"px\";\r\n      }\r\n      return width;\r\n    }\r\n    return \"100%\";\r\n  }\r\n\r\n  onSVGPointerMove(e:PointerEvent){\r\n    if (e.pointerType != \"mouse\" && !this.usingTouchEvent) {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n      this.onSVGMouseMove(e);\r\n    }\r\n  }\r\n\r\n  onSVGPointerDown(e:PointerEvent){\r\n    if (e.pointerType != \"mouse\" && !this.usingTouchEvent) {\r\n      this.onSVGMouseDown(e);\r\n    }\r\n  }\r\n\r\n  onSVGPointerUp(e:PointerEvent) {\r\n    if (e.pointerType != \"mouse\" && !this.usingTouchEvent) {\r\n      this.svgMouseDownPoint = undefined;\r\n      this.selectedHandlerIndex = -1;\r\n    }\r\n  }\r\n\r\n  onPolygonPointerDown(e:PointerEvent){\r\n    if (e.pointerType != \"mouse\" && !this.usingTouchEvent) {\r\n      this.onPolygonMouseDown(e);\r\n    }\r\n  }\r\n\r\n  onPolygonPointerUp(e:PointerEvent){\r\n    e.stopPropagation();\r\n    this.selectedHandlerIndex = -1;\r\n    this.polygonMouseDown = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host ref={(el) => this.root = el}>\r\n        <div class=\"container absolute\"\r\n          ref={(el) => this.containerElement = el}\r\n          onWheel={(e:WheelEvent)=>this.onContainerWheel(e)}\r\n          onMouseUp={()=>this.onContainerMouseUp()}\r\n        >\r\n          <canvas \r\n            ref={(el) => this.canvasElement = el as HTMLCanvasElement}\r\n            class=\"hidden-canvas\"\r\n          ></canvas>\r\n          <svg \r\n            version=\"1.1\" \r\n            ref={(el) => this.svgElement = el as SVGElement}\r\n            class=\"cropper-svg\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox={this.viewBox}\r\n            width={this.getSVGWidth()}\r\n            style={{transform:this.getPanAndZoomStyle()}}\r\n            onMouseMove={(e:MouseEvent)=>this.onSVGMouseMove(e)}\r\n            onMouseDown={(e:MouseEvent)=>this.onSVGMouseDown(e)}\r\n            onTouchStart={(e:TouchEvent)=>this.onSVGTouchStart(e)}\r\n            onTouchEnd={()=>this.onSVGTouchEnd()}\r\n            onTouchMove={(e:TouchEvent)=>this.onSVGTouchMove(e)}\r\n            onPointerMove={(e:PointerEvent)=>this.onSVGPointerMove(e)}\r\n            onPointerDown={(e:PointerEvent)=>this.onSVGPointerDown(e)}\r\n            onPointerUp={(e:PointerEvent)=>this.onSVGPointerUp(e)}\r\n          >\r\n            <image href={this.img ? this.img.src : \"\"}></image>\r\n            {this.rendenInactiveSelections()}\r\n            <polygon\r\n              points={this.getPointsData()}\r\n              class=\"cropper-controls dashed\"\r\n              stroke-width={this.activeStroke * this.getRatio()}\r\n              fill=\"transparent\"\r\n              onMouseDown={(e:MouseEvent)=>this.onPolygonMouseDown(e)}\r\n              onMouseUp={(e:MouseEvent)=>this.onPolygonMouseUp(e)}\r\n              onTouchStart={(e:TouchEvent)=>this.onPolygonTouchStart(e)}\r\n              onTouchEnd={(e:TouchEvent)=>this.onPolygonTouchEnd(e)}\r\n              onPointerDown={(e:PointerEvent)=>this.onPolygonPointerDown(e)}\r\n              onPointerUp={(e:PointerEvent)=>this.onPolygonPointerUp(e)}\r\n            >\r\n            </polygon>\r\n            {this.renderHandlers()}\r\n          </svg>\r\n          {this.renderFooter()}\r\n          <slot></slot>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n"],"mappings":"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"}